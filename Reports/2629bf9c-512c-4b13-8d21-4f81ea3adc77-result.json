{"name": "test_automation_flow", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div jsslot=\"\" id=\"selectionc2\" class=\"dJVBl wIAG6d\" jsname=\"CeL6Qc\">...</div> is not clickable at point (1032, 242). Other element would receive the click: <div class=\"gyrWGe\">...</div>\n  (Session info: chrome=128.0.6613.114)\nStacktrace:\n\tGetHandleVerifier [0x00007FF69882B632+29090]\n\t(No symbol) [0x00007FF69879E6E9]\n\t(No symbol) [0x00007FF69865B1CA]\n\t(No symbol) [0x00007FF6986B6C0E]\n\t(No symbol) [0x00007FF6986B4682]\n\t(No symbol) [0x00007FF6986B1B9B]\n\t(No symbol) [0x00007FF6986B0DB5]\n\t(No symbol) [0x00007FF6986A2D61]\n\t(No symbol) [0x00007FF6986D66EA]\n\t(No symbol) [0x00007FF6986A26A6]\n\t(No symbol) [0x00007FF6986D6900]\n\t(No symbol) [0x00007FF6986F65D9]\n\t(No symbol) [0x00007FF6986D6493]\n\t(No symbol) [0x00007FF6986A09B1]\n\t(No symbol) [0x00007FF6986A1B11]\n\tGetHandleVerifier [0x00007FF698B4883D+3294125]\n\tGetHandleVerifier [0x00007FF698B94423+3604371]\n\tGetHandleVerifier [0x00007FF698B8A2E7+3563095]\n\tGetHandleVerifier [0x00007FF6988E6F16+797318]\n\t(No symbol) [0x00007FF6987A986F]\n\t(No symbol) [0x00007FF6987A5454]\n\t(No symbol) [0x00007FF6987A55E0]\n\t(No symbol) [0x00007FF698794A7F]\n\tBaseThreadInitThunk [0x00007FFAE06C7374+20]\n\tRtlUserThreadStart [0x00007FFAE201CC91+33]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d2ce82ae306e57f7e577f37054c6f93f\")>\n\n    def test_automation_flow(driver):\n        google_page = GooglePage(driver)\n        jumia_page = JumiaPage(driver)\n    \n        with allure.step(\"Step 1: Create a Google account\"):\n>           google_page.create_account(\"Martin\", \"NCBA\",\"Cactus13@\")\n\ntest_automation_flow.py:247: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_automation_flow.py:80: in create_account\n    self.select_first_option()\ntest_automation_flow.py:138: in select_first_option\n    self.wait.until(EC.element_to_be_clickable((By.XPATH, \"//div[@class='dJVBl wIAG6d'][1]\"))).click()\nC:\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nC:\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nC:\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002503DA35670>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF698794A7F]\\\\n\\\\tBaseThreadInitThunk [0x00007FFAE06C7374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFAE201CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div jsslot=\"\" id=\"selectionc2\" class=\"dJVBl wIAG6d\" jsname=\"CeL6Qc\">...</div> is not clickable at point (1032, 242). Other element would receive the click: <div class=\"gyrWGe\">...</div>\nE         (Session info: chrome=128.0.6613.114)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF69882B632+29090]\nE       \t(No symbol) [0x00007FF69879E6E9]\nE       \t(No symbol) [0x00007FF69865B1CA]\nE       \t(No symbol) [0x00007FF6986B6C0E]\nE       \t(No symbol) [0x00007FF6986B4682]\nE       \t(No symbol) [0x00007FF6986B1B9B]\nE       \t(No symbol) [0x00007FF6986B0DB5]\nE       \t(No symbol) [0x00007FF6986A2D61]\nE       \t(No symbol) [0x00007FF6986D66EA]\nE       \t(No symbol) [0x00007FF6986A26A6]\nE       \t(No symbol) [0x00007FF6986D6900]\nE       \t(No symbol) [0x00007FF6986F65D9]\nE       \t(No symbol) [0x00007FF6986D6493]\nE       \t(No symbol) [0x00007FF6986A09B1]\nE       \t(No symbol) [0x00007FF6986A1B11]\nE       \tGetHandleVerifier [0x00007FF698B4883D+3294125]\nE       \tGetHandleVerifier [0x00007FF698B94423+3604371]\nE       \tGetHandleVerifier [0x00007FF698B8A2E7+3563095]\nE       \tGetHandleVerifier [0x00007FF6988E6F16+797318]\nE       \t(No symbol) [0x00007FF6987A986F]\nE       \t(No symbol) [0x00007FF6987A5454]\nE       \t(No symbol) [0x00007FF6987A55E0]\nE       \t(No symbol) [0x00007FF698794A7F]\nE       \tBaseThreadInitThunk [0x00007FFAE06C7374+20]\nE       \tRtlUserThreadStart [0x00007FFAE201CC91+33]\n\nC:\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "Step 1: Create a Google account", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div jsslot=\"\" id=\"selectionc2\" class=\"dJVBl wIAG6d\" jsname=\"CeL6Qc\">...</div> is not clickable at point (1032, 242). Other element would receive the click: <div class=\"gyrWGe\">...</div>\n  (Session info: chrome=128.0.6613.114)\nStacktrace:\n\tGetHandleVerifier [0x00007FF69882B632+29090]\n\t(No symbol) [0x00007FF69879E6E9]\n\t(No symbol) [0x00007FF69865B1CA]\n\t(No symbol) [0x00007FF6986B6C0E]\n\t(No symbol) [0x00007FF6986B4682]\n\t(No symbol) [0x00007FF6986B1B9B]\n\t(No symbol) [0x00007FF6986B0DB5]\n\t(No symbol) [0x00007FF6986A2D61]\n\t(No symbol) [0x00007FF6986D66EA]\n\t(No symbol) [0x00007FF6986A26A6]\n\t(No symbol) [0x00007FF6986D6900]\n\t(No symbol) [0x00007FF6986F65D9]\n\t(No symbol) [0x00007FF6986D6493]\n\t(No symbol) [0x00007FF6986A09B1]\n\t(No symbol) [0x00007FF6986A1B11]\n\tGetHandleVerifier [0x00007FF698B4883D+3294125]\n\tGetHandleVerifier [0x00007FF698B94423+3604371]\n\tGetHandleVerifier [0x00007FF698B8A2E7+3563095]\n\tGetHandleVerifier [0x00007FF6988E6F16+797318]\n\t(No symbol) [0x00007FF6987A986F]\n\t(No symbol) [0x00007FF6987A5454]\n\t(No symbol) [0x00007FF6987A55E0]\n\t(No symbol) [0x00007FF698794A7F]\n\tBaseThreadInitThunk [0x00007FFAE06C7374+20]\n\tRtlUserThreadStart [0x00007FFAE201CC91+33]\n\n", "trace": "  File \"C:\\Users\\lenovo\\Downloads\\test_automation_flow.py\", line 247, in test_automation_flow\n    google_page.create_account(\"Martin\", \"NCBA\",\"Cactus13@\")\n  File \"C:\\Python\\Python38\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\lenovo\\Downloads\\test_automation_flow.py\", line 80, in create_account\n    self.select_first_option()\n  File \"C:\\Users\\lenovo\\Downloads\\test_automation_flow.py\", line 138, in select_first_option\n    self.wait.until(EC.element_to_be_clickable((By.XPATH, \"//div[@class='dJVBl wIAG6d'][1]\"))).click()\n  File \"C:\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"C:\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Fill in Google account signup form with details", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div jsslot=\"\" id=\"selectionc2\" class=\"dJVBl wIAG6d\" jsname=\"CeL6Qc\">...</div> is not clickable at point (1032, 242). Other element would receive the click: <div class=\"gyrWGe\">...</div>\n  (Session info: chrome=128.0.6613.114)\nStacktrace:\n\tGetHandleVerifier [0x00007FF69882B632+29090]\n\t(No symbol) [0x00007FF69879E6E9]\n\t(No symbol) [0x00007FF69865B1CA]\n\t(No symbol) [0x00007FF6986B6C0E]\n\t(No symbol) [0x00007FF6986B4682]\n\t(No symbol) [0x00007FF6986B1B9B]\n\t(No symbol) [0x00007FF6986B0DB5]\n\t(No symbol) [0x00007FF6986A2D61]\n\t(No symbol) [0x00007FF6986D66EA]\n\t(No symbol) [0x00007FF6986A26A6]\n\t(No symbol) [0x00007FF6986D6900]\n\t(No symbol) [0x00007FF6986F65D9]\n\t(No symbol) [0x00007FF6986D6493]\n\t(No symbol) [0x00007FF6986A09B1]\n\t(No symbol) [0x00007FF6986A1B11]\n\tGetHandleVerifier [0x00007FF698B4883D+3294125]\n\tGetHandleVerifier [0x00007FF698B94423+3604371]\n\tGetHandleVerifier [0x00007FF698B8A2E7+3563095]\n\tGetHandleVerifier [0x00007FF6988E6F16+797318]\n\t(No symbol) [0x00007FF6987A986F]\n\t(No symbol) [0x00007FF6987A5454]\n\t(No symbol) [0x00007FF6987A55E0]\n\t(No symbol) [0x00007FF698794A7F]\n\tBaseThreadInitThunk [0x00007FFAE06C7374+20]\n\tRtlUserThreadStart [0x00007FFAE201CC91+33]\n\n", "trace": "  File \"C:\\Python\\Python38\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\lenovo\\Downloads\\test_automation_flow.py\", line 80, in create_account\n    self.select_first_option()\n  File \"C:\\Users\\lenovo\\Downloads\\test_automation_flow.py\", line 138, in select_first_option\n    self.wait.until(EC.element_to_be_clickable((By.XPATH, \"//div[@class='dJVBl wIAG6d'][1]\"))).click()\n  File \"C:\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"C:\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Open Google account signup page", "status": "passed", "start": 1724972874758, "stop": 1724972889721}], "parameters": [{"name": "first_name", "value": "'Martin'"}, {"name": "last_name", "value": "'NCBA'"}, {"name": "username", "value": "'Cactus13@'"}], "start": 1724972874758, "stop": 1724972907256}], "start": 1724972874758, "stop": 1724972912389}], "start": 1724972874758, "stop": 1724972912394, "uuid": "580b7621-426f-447d-aed8-f7d90f4d3a33", "historyId": "e891e0b0ecda78f664732d0fc0c99438", "testCaseId": "e891e0b0ecda78f664732d0fc0c99438", "fullName": "test_automation_flow#test_automation_flow", "labels": [{"name": "suite", "value": "test_automation_flow"}, {"name": "host", "value": "DESKTOP-QTVNGQR"}, {"name": "thread", "value": "17580-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_automation_flow"}]}